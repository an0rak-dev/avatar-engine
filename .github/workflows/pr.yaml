name: Validate PullRequest

on:
  pull_request:

env:
  VCINSTALL: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC"
  DEFINES: "/DUNICODE"
  
jobs:
  check-format:
    name: Check source code format
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Clang-format
        shell: cmd
        run: |
          "%VCINSTALL%\Tools\Llvm\bin\clang-format.exe" ^
            --Werror --dry-run --ferror-limit=0 ^
            --style=file:misc\.clang-format ^
            includes\avatar\core\*.hpp ^
            includes\avatar\interfaces\*.hpp ^
            includes\avatar\platforms\*.hpp ^
            includes\avatar\renderers\*.hpp ^
            src\*.cpp
  build-sources:
    name: Build the source code
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Compile
        shell: cmd
        run: |
          call "%VCINSTALL%\\Auxiliary\\Build\\vcvarsall.bat" x64
          cl.exe /Zi /EHsc /nologo /FC /c %DEFINES% /Iincludes src\*.cpp
          if %errorlevel% neq 0 exit /b 1
          lib.exe /nologo /out:avatar-engine.lib user32.lib *.obj
          if %errorlevel% neq 0 exit /b 1
  lint:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint the code
        shell: cmd
        run: |
          "%VCINSTALL%\Tools\Llvm\bin\clang-tidy.exe" --config-file=misc\.clang-tidy src\* -- -Iincludes
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Doxygen
        run: sudo apt-get update && sudo apt-get install -y doxygen
      - name: Check documentation
        run: doxygen misc/Doxyfile